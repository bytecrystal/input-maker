# Rime schema settings
# encoding: utf-8

schema:
  schema_id: tuma
  name: "兔码"
  version: "1.0"
  author:
    - 基于 C_42 2.4版本改编
    - 安静的水
  description: |
    改编自c_42的形码方案，而前身是 Cicin 所作的 C 输入
    - pinyin_simp
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中, 西 ]
  - name: full_shape
    states: [ 半, 全 ]
  - name: ascii_punct
    states: [ 。, ． ]
  - name: zh_trad
    reset: 0
    states: [ 简, 繁 ]
  - name: emoji_suggestion
    states: [ "🈚️️\uFE0E", "🈶️️\uFE0F" ]
    reset: 1


engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
#    - affix_segmentor@reverse_lookup
#    - affix_segmentor@pinyin_lookup
#    - affix_segmentor@bihua_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - table_translator
#    - script_translator@pinyin_lookup
#    - script_translator@bihua_lookup
  filters:
    - simplifier
    - uniquifier
#    - simplifier@emoji_suggestion
    - simplifier@zh_trad
#    - reverse_lookup_filter@pinyin_reverse_lookup
#    - reverse_lookup_filter@bihua_reverse_lookup

speller:
  alphabet: "qwertasdfgzxcvbyuiophjklnm"
#  initials: "qwertasdfgzxcvbyuiophjklnm"
  auto_select: true
  max_code_length: 4 #顶字上屏 （在QQ聊天窗口出问题，会吃字，如“末笔识别”，会只留下“识别”。暂未找到解决办法。）
  auto_select_unique_candidate: true #无重码自动上屏
  delimiter: ";'"


translator:
  dictionary: tuma
  db_class: tabledb
  initial_quality: 100000
  #  dictionary: pinyin_simp
#  preedit_format:
#    - xform/([nl])v/$1ü/
#    - xform/([nl])ue/$1üe/
#    - xform/([jqxy])v/$1u/
  enable_charset_filter: false
  enable_sentence: false
  enable_encoder: false
  encode_commit_history: false
  enable_completion: true
  disable_user_dict_for_patterns:
    - "^z.*$"
#  enable_user_dict: false #禁止词序调整

fixed:
  __include: /translator
  initial_quality: 1000
  enable_encoder: false
  enable_user_dict: false
#
#emoji_suggestion:
#  opencc_config: emoji.json
#  option_name: emoji_suggestion
#  tips: all
#  tags:
#    - abc
#    - pinyin_lookup

zh_trad:
  opencc_config: s2tw.json
  option_name: zh_trad
  tags:
    - abc
#
#pinyin_lookup:
#  tag: pinyin_lookup
#  dictionary: luna_pinyin
#  enable_user_dict: false
#  tips: "〔拼音〕"

#bihua_lookup:
#  tag: bihua_lookup
#  dictionary: stroke
#  enable_user_dict: false
#  tips: "〔笔画〕"

abc_segmentor:
  extra_tags:
    - reverse_lookup
#注释掉上面3行后就不能拼音混输了

# 反查
reverse_lookup:
  dictionary: pinyin_simp
  prefix: "`"
  suffix: "'"
  tips: 〔拼音〕
  preedit_format:
    - xform/([nljqxy])v/$1ü/

#pinyin_reverse_lookup:
#  tags: [ pinyin_lookup ]
#  overwrite_comment: true
#  dictionary: &dict
#  enable_user_dict: false
#  comment_format:
#    - "xform/$/〕/"
#    - "xform/^/〔/"
#
#bihua_reverse_lookup:
#  tags: [ bihua_lookup ]
#  overwrite_comment: true
#  dictionary: *dict
#  enable_user_dict: false
#  comment_format:
#    - "xform/$/〕/"
#    - "xform/^/〔/"
#    - "xform/~//"

# 标点
punctuator:
  import_preset: symbols

# 杂项
#recognizer:
#  import_preset: default
#  patterns:
#    punct: "^/[0-9]*[a-z]*$"
#    pinyin: "`[a-z']*;?$"
recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*'?$"
    punct: "^/[a-z]*$"


key_binder:
  import_preset: default
  bindings:
#    - {accept: Return, send: Escape, when: composing}
    - {accept: semicolon, send: 2, when: has_menu} #分號選第二重碼
    - {accept: apostrophe, send: 3, when: has_menu} #引號選第三重碼
#    - {accept: bracketleft, send: Page_Up, when: paging}
#    - {accept: bracketright, send: Page_Down, when: has_menu}

menu:
  page_size: 9
